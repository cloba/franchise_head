<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.ksmart.franchise.head.royaltyOverdue.repository.RoyaltyOverdueMapper">
	<resultMap type="org.ksmart.franchise.head.royaltyOverdue.model.RoyaltyOverdue" id="RoyaltyOverdueResultMap">
		<id property="royaltyOverdueCode" column="royalty_overdue_code" />
		<result property="contractCode" column="contract_code"/>
		<result property="royaltyOverdueStatus" column="royalty_overdue_status"/>
		<result property="royaltyOverduePaid" column="royalty_overdue_paid"/>
		<result property="royaltyOverduePayDate" column="royalty_overdue_pay_date"/>
		<result property="royaltyOverdueRest" column="royalty_overdue_rest"/>
		<result property="royaltyTotalOverduePay" column="royalty_total_overdue_pay"/>
	</resultMap>
	
<!--  0808/17:30 학원마지막 쿼리  	

select * from royalty where royalty_code IN (select royalty_code from royalty where royalty_month = '2016-07' and royalty_code IN (select royalty_code from royalty where royalty_deadline > date_format(now(),'%d') )) 
-->
	
	<!--로얄티 연체 리스트 조회 쿼리 -->
	<select id="selectRoyaltyOverdueList" parameterType="java.util.Map" resultMap="RoyaltyOverdueResultMap"> 
		SELECT
				royalty_overdue_code,
				contract_code,
				royalty_overdue_status,
				royalty_overdue_paid,
				royalty_overdue_pay_date,
				royalty_overdue_rest,
				royalty_total_overdue_pay
			From 
				royalty_overdue
			<where>
				<if test='search.searchItem != null and search.searchItem != "" '>
					AND ${search.searchKey} like CONCAT('%',#{search.searchItem},'%')
				</if>
			</where>
			<trim prefix="ORDER BY">
				<if test="search.criteria != null or search.criteria != ''">
					${search.criteria} ${search.upDown}
				</if>
			</trim>
	</select>
	
	<!-- <insert id="insertHeadStaff" parameterType="org.ksmart.franchise.head.headStaff.model.HeadStaffCommand" useGeneratedKeys="true" keyProperty="headStaffId" > 
		<selectKey resultType="hashmap" keyProperty="headStaffId" order="BEFORE">
		select if(isnull(head_staff_id),'head_staff_id1', concat('head_staff_id', MAX(CONVERT(SUBSTRING(head_staff_id,14), UNSIGNED))+1)) 
			as headStaffId from head_staff
		</selectKey>  
		INSERT INTO head_staff 
			(head_staff_id,	head_staff_pw, head_staff_name, head_staff_level, head_staff_dep, head_staff_regit_date, head_staff_regit_id, 
			 head_staff_join, head_staff_phone_first, head_staff_phone_second, head_staff_phone_third, head_staff_post, head_staff_road_addr, head_staff_parcle_addr)
		VALUES (#{headStaffId}, '0000', #{headStaffName}, '관리자', #{headStaffDep},  NOW(), 'id001', NOW(), #{headStaffPhoneFirst},#{headStaffPhoneSecond}, #{headStaffPhoneThird}, #{headStaffPost}, #{headStaffRoadAddr}, #{headStaffParcleAddr})      
	</insert> -->
	 
	                
	<insert id="insertRoyaltyOverdue" parameterType="org.ksmart.franchise.head.royalty.model.RoyaltyOverdueAdd">
		 
		 <selectKey resultType="hashmap" keyProperty="royaltyOverdueCode" order="BEFORE">                        
			select if(isnull(royalty_overdue_code),'royalty_overdue_code1', concat('royalty_overdue_code', MAX(CONVERT(SUBSTRING(royalty_overdue_code,21), UNSIGNED))+1)) 
				as royaltyOverdueCode from royalty_overdue
	     </selectKey>
	     <!-- list22:Royalty [lastMonth=null, RoyaltyCode=royalty_code1, contractCode=contract_code1, royaltyMonth=2016-06, royaltyDeadline=15, royaltyPaid=N, subPracticalSellPriceMonth=1000000, subSellProfitMonth=900000, headSellProfitBySubMonth=100000, royaltyPayActualDate=2016-08-08, royaltyActualAmount=100000, subName=전주사랑점] -->
		INSERT INTO royalty_overdue
			(royalty_overdue_code,   contract_code,    royalty_overdue_status,   royalty_overdue_paid,                                                                                                  royalty_overdue_pay_date,    royalty_actual_amount                                  royalty_overdue_rest,royalty_total_overdue_pay) 
		VALUES        
		    (#{royaltyOverdueCode},  #{contractCode},  #{royaltyActualAmount},  (select case when royalty_actual_amount=0 then '1' else '2' END FROM royalty where royalty_code = 'royalty_code1' )     #{royaltyPayActualDate},     #{headSellProfitBySubMonth - royaltyActualAmount },   #{headSellProfitBySubMonth});  
	</insert>

</mapper>