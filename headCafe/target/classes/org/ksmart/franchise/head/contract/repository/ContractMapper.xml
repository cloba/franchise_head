<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.ksmart.franchise.head.contract.repository.ContractMapper">
	
	<!-- POJO객체와 DB column명을 맞춰줍니다 -->
	<resultMap type="org.ksmart.franchise.head.contract.model.Contract" id="contractResultMap">
		<id property="contractCode" column="contract_code"/>
		<result property="headStaffId" column="head_staff_id"/>
		<result property="subCode" column="sub_code"/>
		<result property="contractorName" column="contractor_name"/>
		<result property="contractActualDate" column="contract_actual_date"/>
		<result property="contractRegitDate" column="contract_regit_date"/>
		<result property="contractExpiryDate" column="contract_expiry_date"/>
		<result property="contractDeposit" column="contract_deposit"/>
		<result property="contractProfitPercent" column="contract_profit_percent"/>
		<result property="contractStatus" column="contract_status"/>
		<result property="contractFile" column="contract_file"/>
		<result property="contractFileOriginalName" column="contract_file_original_name"/>
		<result property="contractFileStoredName" column="contract_file_stored_name"/>
		<result property="contractFileSize" column="contract_file_size"/>
		<result property="contractN" column="contract_n"/>
		<result property="contractExpiredDate" column="contract_expired_date"/>
		<result property="contractExpireContent" column="contract_expire_content"/>
		<result property="royaltyDeadline" column="royalty_deadline"/>
	</resultMap>
	
	<!-- contract의 리스트를 봅니다 (검색포함)-->
	<select id="selectContract" parameterType="java.util.Map" resultMap="contractResultMap">
		SELECT contract_code, head_staff_id, sub_code, contractor_name, contract_actual_date, contract_regit_date, contract_expiry_date, contract_deposit, contract_profit_percent, contract_status, contract_file, contract_file_original_name, contract_file_stored_name, contract_file_size, contract_n, contract_expired_date, contract_expire_content, royalty_deadline 
		FROM contract
		<where>
			<if test="contractSearch.regitDateStart != null and contractSearch.regitDateEnd != null and contractSearch.regitDateStart !='' and contractSearch.regitDateEnd !=''">
				<![CDATA[date(contract_actual_date) >= #{contractSearch.regitDateStart} and date(contract_actual_date) <= #{contractSearch.regitDateEnd}]]>  
			</if>
			<if test="contractSearch.searchKey != null and contractSearch.searchKey != '' and contractSearch.searchItem != null and contractSearch.searchItem != ''">
				AND  ${contractSearch.searchKey} like CONCAT('%',#{contractSearch.searchItem},'%') 
			</if> 
			<if test="contractSearch.status != null and contractSearch.status != ''">
				AND  contract_status = #{contractSearch.status}
			</if> 
		</where> 
		<trim prefix="ORDER BY">
			<if test="contractSearch.criteria == null or contractSearch.criteria == ''">
				contract_actual_date
			</if>
			<if test="contractSearch.criteria != null or contractSearch.criteria != ''">
				${contractSearch.criteria} ${contractSearch.upDown}
			</if>
		</trim>
	</select>
	
	<!-- contract 하나를 봅니다  -->
	<select id="selectOneContract" parameterType="java.lang.String" resultMap="contractResultMap">
		SELECT contract_code, head_staff_id, sub_code, contractor_name, contract_actual_date, contract_regit_date, contract_expiry_date, contract_deposit, contract_profit_percent, contract_status, contract_file, contract_file_original_name, contract_file_stored_name, ROUND(contract_file_size/1024,1) AS contract_file_size, contract_n, contract_expired_date, contract_expire_content, royalty_deadline 
		FROM contract
		WHERE contract_code = #{contractCode}
	</select>
	
	<!-- contract를 파기합니다  -->
	<update id="expireContract">
		UPDATE contract
		SET	contract_expired_date=#{contractExpiredDate},
			contract_expire_content=#{contractExpireContent}, 
			contract_status=#{contractStatus}
		WHERE contract_code = #{contractCode}
	</update>
	
	<!-- contract를 수정합니다 -->
	<update id="modifyContract">
		UPDATE contract
		SET
			<if test="contractFile != null">
				contract_file=#{contractFile},
			</if>
			<if test="fileMap.originalName != null">
				contract_file='Y', 
				contract_file_original_name=#{fileMap.originalName}, 
				contract_file_stored_name=#{fileMap.storedName}, 
				contract_file_size=#{fileMap.fileSize},
			</if>
			contract_status=#{contractStatus}
		WHERE contract_code = #{contractCode}
	</update>
	
	<!-- contract를 등록합니다 -->
	<insert id="addContract" parameterType="org.ksmart.franchise.head.contract.model.ContractCommand">
		<selectKey resultType="hashmap" keyProperty="contractCode" order="BEFORE">
			SELECT IF( EXISTS(
	             SELECT contract_code
	             FROM contract), concat('contract_code', MAX(CONVERT(SUBSTRING(contract_code,14), UNSIGNED))+1), 'contract_code1') as contractCode
			FROM contract
		</selectKey>
		INSERT INTO contract
			(contract_code, head_staff_id, sub_code, contractor_name, contract_actual_date, contract_regit_date, contract_expiry_date, contract_deposit, contract_profit_percent, contract_status, contract_file, contract_file_original_name, contract_file_stored_name, contract_file_size, contract_n, royalty_deadline)
			VALUES (#{contractCode}, 'head_staff_id1', #{subCode}, #{contractorName}, #{contractActualDate}, NOW(), #{contractExpiryDate}, #{contractDeposit}, #{contractProfitPercent}, 1, 'Y', #{contractFile.originalName}, #{contractFile.storedName}, #{contractFile.fileSize}, #{contractN}, #{royaltyDeadline})
	</insert>
	
	<!-- 첨부파일 정보를 가져옵니다 -->
	<select id="selectFileInfo" parameterType="java.lang.String" resultMap="contractResultMap">
		SELECT contract_file_original_name, contract_file_stored_name, contract_file_size
		FROM contract WHERE contract_code = #{contractCode}
	</select>
	
	
</mapper>