<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.ksmart.franchise.head.item.repository.ItemMapper">
	
	<!-- POJO객체와 DB column명을 맞춰줍니다 -->
	<resultMap type="org.ksmart.franchise.head.item.model.Item" id="itemResultMap">
		<id property="hItemCode" column="h_item_code"/>
		<result property="hItemName" column="h_item_name"/>
		<result property="inteCode" column="inte_code"/>
		<result property="hItemQuantity" column="h_item_quantity"/>
		<result property="hItemUnit" column="h_item_unit"/>
		<result property="hItemPurchasePrice" column="h_item_purchase_price"/>
		<result property="hItemMarginPercent" column="h_item_margin_percent"/>
		<result property="hItemHeadProfit" column="h_item_head_profit"/>
		<result property="hItemSellingPrice" column="h_item_selling_price"/>
		<result property="hItemRetailPrice" column="h_item_retail_price"/>
		<result property="hItemRegitDate" column="h_item_regit_date"/>
		<result property="headStaffId" column="head_staff_id"/>
		<result property="headClientCode" column="head_client_code"/>
	</resultMap>
	
	<!-- head_item을 추가합니다 -->
	<insert id="insertItem" parameterType="java.util.Map">
		<selectKey resultType="hashmap" keyProperty="hItemCode,inteCode" order="BEFORE">
			select if(isnull(h_item_code),'h_item_code1', concat('h_item_code', MAX(CONVERT(SUBSTRING(h_item_code,12), UNSIGNED))+1)) as hItemCode, if(isnull(inte_code),'i1', concat('i', MAX(CONVERT(SUBSTRING(inte_code,2), UNSIGNED))+1)) as inteCode
			from head_item
		</selectKey>
		
		INSERT INTO head_item
			(h_item_code, h_item_name, inte_code, h_item_quantity, h_item_unit, h_item_purchase_price, h_item_margin_percent, h_item_head_profit, h_item_selling_price, h_item_retail_price, h_item_regit_date, head_staff_id, head_client_code)
		VALUES (#{hItemCode}, 
				#{itemCommand.hItemName}, 
				#{inteCode}, 
				#{itemCommand.hItemQuantity}, 
				#{itemCommand.hItemUnit}, 
				#{itemCommand.hItemPurchasePrice}, 
				#{itemCommand.hItemMarginPercent}/100, 
				#{itemCommand.hItemPurchasePrice}*(#{itemCommand.hItemMarginPercent}/100), 
				#{itemCommand.hItemPurchasePrice}+#{itemCommand.hItemPurchasePrice}*(#{itemCommand.hItemMarginPercent}/100), 
				#{itemCommand.hItemRetailPrice}, 
				NOW(), 
				#{headLogin.headStaffId}, 
				#{itemCommand.headClientCode})
	</insert>
	
	<!-- head_item의 리스트를 봅니다 (검색포함)-->
	<select id="selectItem" parameterType="java.util.Map" resultMap="itemResultMap">
		SELECT h_item_code, h_item_name, inte_code, h_item_quantity, h_item_unit, h_item_purchase_price, h_item_regit_date, head_staff_id, head_client_code 
		FROM head_item
		<where>
			<if test="itemSearch.regitDateStart != null and itemSearch.regitDateEnd != null and itemSearch.regitDateStart !='' and itemSearch.regitDateEnd !=''">
				<![CDATA[date(h_item_regit_date) >= #{itemSearch.regitDateStart} and date(h_item_regit_date) <= #{itemSearch.regitDateEnd}]]>  
			</if>
			<if test="itemSearch.searchKey != null and itemSearch.searchKey != '' and itemSearch.searchItem != null and itemSearch.searchItem != ''">
				AND  ${itemSearch.searchKey} like CONCAT('%',#{itemSearch.searchItem},'%') 
			</if> 
		</where> 
		<trim prefix="ORDER BY">
			<if test="itemSearch.criteria == null or itemSearch.criteria == ''">
				h_item_regit_date
			</if>
			<if test="itemSearch.criteria != null or itemSearch.criteria != ''">
				${itemSearch.criteria} ${itemSearch.upDown}
			</if>
		</trim>
	</select>
	
	<!-- head_item 하나를 봅니다 (update Form에 사용) -->
	<select id="selectOneItem" parameterType="java.util.Map" resultMap="itemResultMap">
		SELECT h_item_code, h_item_name, inte_code, h_item_quantity, h_item_unit, h_item_purchase_price, h_item_margin_percent, h_item_head_profit, h_item_selling_price, h_item_retail_price, h_item_regit_date, head_staff_id, head_client_code 
		FROM head_item
		WHERE h_item_code = #{hItemCode}
	</select>
	
	<!-- head_item을 수정합니다 -->
	<update id="updateItem" parameterType="java.util.Map">
		UPDATE head_item
			SET
			h_item_name=#{itemCommand.hItemName},
			h_item_quantity=#{itemCommand.hItemQuantity},
			h_item_unit=#{itemCommand.hItemUnit},
			h_item_purchase_price=#{itemCommand.hItemPurchasePrice},
			h_item_margin_percent=#{itemCommand.hItemMarginPercent}/100,
			h_item_head_profit=#{itemCommand.hItemPurchasePrice}*(#{itemCommand.hItemMarginPercent}/100),
			h_item_selling_price=#{itemCommand.hItemPurchasePrice}+#{itemCommand.hItemPurchasePrice}*(#{itemCommand.hItemMarginPercent}/100),
			h_item_retail_price=#{itemCommand.hItemRetailPrice},
			h_item_regit_date=NOW(),
			head_staff_id=#{headLogin.headStaffId},
			head_client_code=#{itemCommand.headClientCode}
		WHERE h_item_code = #{itemCommand.hItemCode}
	</update>
	
	<!-- 본사가 판매한 상품의 가격을 구합니다 -->
	<select id="getSumForAccounting" resultType="java.lang.Integer">
		SELECT (h_item_selling_price*#{quantity}) as Price
		FROM head_item
		WHERE inte_code = #{inteCode}
	</select>
</mapper>