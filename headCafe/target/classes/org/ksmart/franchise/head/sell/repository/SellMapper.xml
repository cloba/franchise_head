<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.ksmart.franchise.head.sell.repository.SellMapper">
	
	<!-- POJO객체와 DB column명을 맞춰줍니다 -->
	<resultMap type="org.ksmart.franchise.head.sell.model.Sell" id="sellResultMap">
		<id property="headSellCode" column="head_sell_code"/>
		<result property="inteCode" column="inte_code"/>
		<result property="receivedOrderCode" column="received_order_code"/>
		<result property="headSellQuantity" column="head_sell_quantity"/>
		<result property="subCode" column="sub_code"/>
		<result property="headSellGroup" column="head_sell_group"/>
		<result property="headSellPurchasePrice" column="head_sell_purchase_price"/>
		<result property="headSellSellingPrice" column="head_sell_selling_price"/>
		<result property="headSellDate" column="head_sell_date"/>
		<result property="headSellDelivery" column="head_sell_delivery"/>
		<result property="totalAccountGroup" column="total_account_group"/>
		<result property="headSellFinal" column="head_sell_final"/>
		<result property="headSellFinalStaff" column="head_sell_final_staff"/>
		<result property="headSellFinalDate" column="head_sell_final_date"/>
		<result property="headSellDistr" column="head_sell_distr"/>
		<result property="headSellProfitHead" column="head_sell_profit_head"/>
	</resultMap>
	
	<resultMap type="org.ksmart.franchise.head.sell.model.ReceivedOrder" id="ReceivedOrderResultMap">
		<id property="code" column="received_order_code"/>
		<result property="date" column="received_order_date"/>
		<result property="check" column="received_order_check"/>
		<result property="staff" column="received_order_staff"/>
		<result property="item" column="received_order_item"/>
		<result property="subCode" column="received_order_sub_code"/>
		<result property="group" column="received_order_group"/>
		<result property="quantity" column="received_order_quantity"/>
		<result property="amount" column="received_order_amount"/>
	</resultMap>
	
	<!-- 본사의 판매 리스트를 봅니다 (검색포함)-->
	<select id="selectSell" parameterType="java.util.Map" resultMap="sellResultMap">
		SELECT head_sell_code, inte_code, received_order_code, head_sell_quantity, sub_code, head_sell_group, head_sell_purchase_price, head_sell_selling_price, head_sell_date, head_sell_delivery, total_account_group, head_sell_final, head_sell_final_staff, head_sell_final_date, head_sell_distr, head_sell_profit_head
		FROM head_sell
		<where>
			<if test="search.regitDateStart != null and search.regitDateEnd != null and search.regitDateStart !='' and search.regitDateEnd !=''">
				<![CDATA[date(head_sell_date) >= #{search.regitDateStart} and date(head_sell_date) <= #{search.regitDateEnd}]]>  
			</if>
			<if test="search.searchKey != null and search.searchKey != '' and search.searchItem != null and search.searchItem != ''">
				AND ${search.searchKey} REGEXP #{search.searchItem} 
			</if> 
			<if test="search.status != null and search.status != ''">
				AND head_sell_final = #{search.status}
			</if>
		</where> 
		<trim prefix="ORDER BY">
			<if test="search.criteria == null or search.criteria == ''">
				head_sell_date DESC
			</if>
			<if test="search.criteria != null or search.criteria != ''">
				${search.criteria} ${search.upDown}
			</if>
		</trim> 
	</select>
	
	<!-- 판매내역 하나를 봅니다 -->
	<select id="selectOneSell" parameterType="java.util.Map" resultMap="sellResultMap">
		SELECT head_sell_code, inte_code, received_order_code, head_sell_quantity, sub_code, head_sell_group, head_sell_purchase_price, head_sell_selling_price, head_sell_date, head_sell_delivery, total_account_group, head_sell_final, head_sell_final_staff, head_sell_final_date, head_sell_distr, head_sell_profit_head
		FROM head_sell
		WHERE head_sell_code = #{headSellCode}
	</select>
	
	<!-- 주문받은 내역 리스트를 봅니다 -->
	<select id="selectReceivedOrder" parameterType="java.util.Map" resultMap="ReceivedOrderResultMap">
		SELECT received_order_code, received_order_date, received_order_check, received_order_staff, received_order_item, received_order_sub_code, received_order_group, received_order_quantity, received_order_amount
		FROM received_order
		<where>
			<if test="search.regitDateStart != null and search.regitDateEnd != null and search.regitDateStart !='' and search.regitDateEnd !=''">
				<![CDATA[date(received_order_date) >= #{search.regitDateStart} and date(received_order_date) <= #{search.regitDateEnd}]]>  
			</if>
			<if test="search.searchKey != null and search.searchKey != '' and search.searchItem != null and search.searchItem != ''">
				AND ${search.searchKey} REGEXP #{search.searchItem} 
			</if> 
			<if test="search.status != null and search.status != ''">
				AND received_order_check = #{search.status}
			</if>
		</where> 
		<trim prefix="ORDER BY">
			<if test="search.criteria != null or search.criteria != ''">
				${search.criteria} ${search.upDown}
			</if>
		</trim> 
	</select>
	
	<!-- 들어온 주문을 승인합니다 -->
	<update id="confirmOrder" parameterType="java.lang.String">
		UPDATE received_order
		SET
			received_order_check='Y',
			received_order_date=NOW(),
			received_order_staff='head_staff_id1'
		WHERE received_order_code = #{code}
	</update>
	
	<!-- 주문 승인을 취소합니다 -->
	<update id="cancelConfirm" parameterType="java.lang.String">
		UPDATE received_order
		SET
			received_order_check='N',
			received_order_date=null,
			received_order_staff='head_staff_id1'
		WHERE received_order_code = #{code}
	</update>
	
	<!-- 승인한 주문건을 판매내역에 추가합니다 -->
	<insert id="addSell" parameterType="org.ksmart.franchise.head.sell.model.Sell" >
		<selectKey resultType="hashmap" keyProperty="headSellCode" order="BEFORE">
			SELECT IF( EXISTS(
            	SELECT head_sell_code
             	FROM head_sell), concat('head_sell_code', MAX(CONVERT(SUBSTRING(head_sell_code,15), UNSIGNED))+1), 'head_sell_code1') as headSellCode
			FROM head_sell
		</selectKey>
		INSERT INTO head_sell
			(head_sell_code, inte_code, received_order_code, head_sell_quantity, sub_code, head_sell_group, 
			head_sell_purchase_price, head_sell_selling_price, head_sell_date, total_account_group, 
			head_sell_profit_head)
			SELECT #{headSellCode}, r.received_order_item, r.received_order_code, r.received_order_quantity, r.received_order_sub_code,
					r.received_order_group, (i.h_item_purchase_price*r.received_order_quantity), 
					(i.h_item_selling_price*r.received_order_quantity), now(), '본사판매', ((i.h_item_selling_price*r.received_order_quantity)-(i.h_item_selling_price*r.received_order_quantity))
			FROM head_item i, received_order r 
			WHERE r.received_order_code = #{receivedOrderCode} and r.received_order_item = i.inte_code
	</insert>
	
	<!-- 판매내역 추가를 되돌립니다 -->
	<delete id="cancelSell" parameterType="java.lang.String">
		DELETE FROM head_sell 
		WHERE head_sell_code= (select concat('head_sell_code', MAX(CONVERT(SUBSTRING(head_sell_code,15), UNSIGNED))))
	</delete>
	
	<!-- 배송요청 여부 변경합니다 -->
	<update id="updateSellDelivery" parameterType="java.util.Map">
		UPDATE head_sell
		SET
			head_sell_delivery=#{status}
		WHERE head_sell_code = #{headSellCode}
	</update>
</mapper>