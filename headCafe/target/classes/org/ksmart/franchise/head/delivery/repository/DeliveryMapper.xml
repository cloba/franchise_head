<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.ksmart.franchise.head.delivery.repository.DeliveryMapper">
	
	<!-- POJO객체와 DB column명을 맞춰줍니다 -->
	<resultMap type="org.ksmart.franchise.head.delivery.model.Delivery" id="deliveryResultMap">
		<id property="deliveryCode" column="delivery_code"/>
		<result property="receivedOrderCode" column="received_order_code"/>
		<result property="deliveryDate" column="delivery_date"/>
		<result property="deliveryReceive" column="delivery_receive"/>
		<result property="deliveryReceiveDate" column="delivery_receive_date"/>
		<result property="deliveryStatus" column="delivery_status"/>
		<result property="headStaffId" column="head_staff_id"/>
		<result property="deliveryConfirmDate" column="delivery_confirm_date"/>
		<result property="deliveryReturn" column="delivery_return"/>
		<result property="deliveryPerson" column="delivery_person"/>
	</resultMap>
	
	<!-- delivery의 리스트를 봅니다 (검색포함)-->
	<select id="selectDelivery" parameterType="java.util.Map" resultMap="deliveryResultMap">
		SELECT delivery_code, received_order_code, delivery_date, delivery_receive, delivery_receive_date, delivery_status, head_staff_id, delivery_return, delivery_person, delivery_confirm_date
		FROM delivery
		<where>
			<if test="search.regitDateStart != null and search.regitDateEnd != null and search.regitDateStart !='' and search.regitDateEnd !=''">
				<![CDATA[date(delivery_date) >= #{search.regitDateStart} and date(delivery_date) <= #{search.regitDateEnd}]]>  
			</if>
			<if test="search.searchKey != null and search.searchKey != '' and search.searchItem != null and search.searchItem != ''">
				AND  ${search.searchKey} like CONCAT('%',#{search.searchItem},'%') 
			</if> 
			<if test="search.status != null and search.status != ''">
				AND delivery_receive = #{search.status}
			</if>
		</where> 
		<trim prefix="ORDER BY">
			<if test="search.criteria == null or search.criteria == ''">
				delivery_date
			</if>
			<if test="search.criteria != null or search.criteria != ''">
				${search.criteria} ${search.upDown}
			</if>
		</trim>
	</select>
	
	<!-- delivery 하나를 봅니다  -->
	<select id="selectOneDelivery" parameterType="java.util.Map" resultMap="deliveryResultMap">
		SELECT delivery_code, received_order_code, delivery_date, delivery_status, head_staff_id, delivery_confirm_date, delivery_person, delivery_return, delivery_receive, delivery_receive_date, orders_code 
		FROM delivery
		WHERE delivery_code = #{deliveryCode}
	</select>
	
	<!-- 배송을 요청하면 해당 판매내역에 대한 delivery를 추가합니다 -->
	<insert id="addDelivery" parameterType="org.ksmart.franchise.head.delivery.model.DeliveryCommand">
		<selectKey resultType="hashmap" keyProperty="deliveryCode" order="BEFORE">
			SELECT IF( EXISTS(
            	SELECT delivery_code
             	FROM delivery), concat('delivery_code', MAX(CONVERT(SUBSTRING(delivery_code,14), UNSIGNED))+1), 'delivery_code1') as deliveryCode
			FROM delivery
		</selectKey>
		INSERT INTO delivery
			(delivery_code, delivery_confirm_date, delivery_receive, delivery_status, head_staff_id, delivery_return, received_order_code)
			VALUES (#{deliveryCode}, NOW(), 'N', '1', 'head_staff_id', 'N', #{receivedOrderCode})
	</insert>
	
	<!-- 추가된 delivery를 삭제하여 되돌립니다 -->
	<delete id="deleteDelivery">
		DELETE FROM delivery WHERE delivery_code=#{deliveryCode}
	</delete>
	
	<!-- status를 업데이트 합니다 -->
	<update id="updateStatus" parameterType="org.ksmart.franchise.head.delivery.model.DeliveryCommand">
		UPDATE delivery
			<trim prefix="SET" prefixOverrides=",">
				<if test='deliveryStatus != null and deliveryStatus.equals("2")'>
					delivery_date = NOW()
					, delivery_status=#{deliveryStatus}
					, head_staff_id=#{headStaffId}
				</if>
				<if test='deliveryStatus != null and deliveryStatus.equals("3")'>
					delivery_receive_date = NOW()
					, delivery_status=#{deliveryStatus}
					, head_staff_id=#{headStaffId}
				</if>
			</trim>
		WHERE 
			delivery_code = #{deliveryCode}
	</update>
	<!-- 반품 상품 재배송 해주는 쿼리 -->
	<insert id="insertReDelivery" parameterType="java.util.Map">
		<selectKey resultType="hashmap" keyProperty="deliveryCode" order="BEFORE">
			SELECT IF( EXISTS(
            	SELECT delivery_code
             	FROM delivery), concat('delivery_code', MAX(CONVERT(SUBSTRING(delivery_code,14), UNSIGNED))+1), 'delivery_code1') as deliveryCode
			FROM delivery
		</selectKey>
		
		INSERT INTO delivery 	
			          (delivery_code,    orders_code,           delivery_date,  delivery_receive, head_staff_id,           delivery_return,      delivery_person, received_order_code,          delivery_confirm_date)
		       VALUES (#{deliveryCode},  #{returns.ordersCode}, now(),          'N',              #{returns.headStaffId},       'Y',             '홍길동',          #{returns.receivedOrderCode}, now())     
		       
	
	
	</insert>
</mapper>