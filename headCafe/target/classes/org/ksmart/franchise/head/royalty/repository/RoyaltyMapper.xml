<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.ksmart.franchise.head.royalty.repository.RoyaltyMapper">

	<resultMap id="RoyaltyResultMap" type="org.ksmart.franchise.head.royalty.model.Royalty" >
		<id property="royaltyCode" column="royalty_code"/>
		<result property="contractCode" column="contract_code"/>
		<result property="royaltyMonth"  column="royalty_month"/>
		<result property="royaltyDeadline"  column="royalty_deadline"/>
		<result property="royaltyPaid"  column="royalty_paid"/>
		<result property="subPracticalSellPriceMonth"  column="sub_practical_sell_price_month"/>
		<result property="subSellProfitMonth"  column="sub_sell_profit_month"/>
		<result property="headSellProfitBySubMonth"  column="head_sell_profit_by_sub_month"/>
		<result property="royaltyPayActualDate"  column="royalty_pay_actual_date"/>
		<result property="royaltyActualAmount"  column="royalty_actual_amount"/>
		<result property="subName" column="sub_name"/>
		<result property="subCode" column="sub_code"/>
		<result property="royaltyOverdueIdentify" column="royalty_overdue_identify"/>
		<result property="royaltyHeadStaffId" column="royalty_head_staff_id"/>
	</resultMap>

	<resultMap id="RoyaltyOverdueAddResultMap" type="org.ksmart.franchise.head.royalty.model.RoyaltyOverdueAdd">
		<result property="contractCode" column="contract_code"/>
		<result property="royaltyActualAmount" column="royalty_actual_amount"/>
		<result property="royaltyPayActualDate" column="royalty_pay_actual_date"/>
		<result property="headSellProfitBySubMonth" column="head_sell_profit_by_sub_month"/>
		<result property="royaltyCode" column="royalty_code"/>
		<result property="royaltyOverdueIdentify" column="royalty_overdue_identify"/>
	</resultMap>

 	
	<!-- 로얄티 리스트구 하는 메서드 -->
	<select id="selectRoyaltyList" resultMap="RoyaltyResultMap">
		SELECT
			royalty_code, contract_code, royalty_month, royalty_deadline, royalty_paid, sub_practical_sell_price_month, 
			sub_sell_profit_month, head_sell_profit_by_sub_month, royalty_pay_actual_date, royalty_actual_amount, sub_name
		FROM
			royalty 
		<where>
			<if test='search.searchItem != null and search.searchItem != "" '>
				AND ${search.searchKey} like CONCAT('%',#{search.searchItem},'%')
			</if>
		</where>
		<trim prefix="ORDER BY">
			<if test="search.criteria != null or search.criteria != ''">
				${search.criteria} ${search.upDown}
			</if>
		</trim>
	
	</select>

	<!-- sub_sell과 다른 데이터들로 지난달 로얄티 추가하는 메서드  -->
	<insert id="insertRoyalty" parameterType="java.util.Map" > 
		 <selectKey resultType="hashmap" keyProperty="royaltyCode" order="BEFORE">                        
			select if(isnull(royalty_code),'royalty_code1', concat('royalty_code', MAX(CONVERT(SUBSTRING(royalty_code,13), UNSIGNED))+1)) 
				as royaltyCode from royalty
	     </selectKey> 
		
		INSERT INTO royalty(
				 royalty_code,    sub_name,   contract_code,             royalty_month,          royalty_deadline,                                                                        head_sell_profit_by_sub_month,   sub_practical_sell_price_month,          sub_sell_profit_month,    sub_code)
		SELECT   #{royaltyCode},  sub_name,   #{royalty.contractCode},   #{royalty.lastMonth},   (select royalty_deadline from contract where contract_code = #{royalty.contractCode}),   sum(sub_sell_profit_head),       sum(sub_sell_practical_selling_price),   sum(sub_sell_profit_sub), sub_code 
		
		FROM     sub_sell WHERE PERIOD_DIFF( date_format( now( ) , '%Y%m' ) , date_format (sub_sell_date, '%Y%m' ) ) = 1 and  sub_code IN  (select sub_code from contract where contract_code = #{royalty.contractCode})
	
	</insert>

	<!-- contract_code 가지고 최근 로얄티를 지불한 월 구하는 메서드 -->
	<select id="selectCurrentlypaiedMonth" parameterType="java.util.Map" resultType="java.lang.String">
		
		SELECT 
			royalty_month
		FROM
			 royalty
		WHERE 
			 royalty_code 
		IN 
			(select max(royalty_code) from royalty where contract_code = #{contractCode})
	</select>
	
	<!-- 본사 가맹간의 현재 계약 건수 조회 메서드 -->
	<select id="selectContractCount" resultType="java.lang.String">
		select count(contract_code) from contract where contract_status = 1
	</select>
	
	<!-- 한 가맹에 대한 로얄티 상세정보 조회 쿼리-->
	<select id="selectRoyaltyDetail" parameterType="java.lang.String" resultMap="RoyaltyResultMap">
		SELECT
			royalty_code,             contract_code,                    royalty_month,  
			royalty_paid,             sub_practical_sell_price_month,   sub_code,
			sub_sell_profit_month,    head_sell_profit_by_sub_month,    royalty_deadline,
			royalty_pay_actual_date,  royalty_actual_amount,            sub_name,
			royalty_overdue_identify, royalty_head_staff_id
		FROM
			royalty 
		WHERE 
			royalty_code = #{royaltyCode}
	</select>
	
	<!-- 로얄티 연체 구하 확인하는 쿼리 -->
	<select id="selectRoyaltyOverdueIdentify" parameterType="java.util.Map" resultMap="RoyaltyOverdueAddResultMap">
		SELECT
			 royalty_code, head_sell_profit_by_sub_month, royalty_pay_actual_date, royalty_actual_amount, contract_code
	    FROM
	    	 royalty 
	    WHERE royalty_paid = 'N' AND royalty_overdue_identify='N' AND royalty_code 
		NOT IN
			 (SELECT royalty_code FROM royalty WHERE royalty_month = #{royaltyOverdue.lastMonth} 
		AND royalty_code IN (SELECT royalty_code FROM royalty WHERE royalty_deadline >= date_format(now(),'%d') ))
	</select>
	
	<!-- 로얄티 연체 테이블 이동후 연체에 추가 됐다는 확인컬럼 쿼리 -->
	<update id="updateRoyaltyOverdueIdentify" parameterType="java.lang.String">
		UPDATE 
			royalty
		SET
			royalty_overdue_identify='Y'
		WHERE 
			royalty_code = #{royaltyCode}
	</update>
	
	<!-- 로얄티 지불 입력 쿼리 -->
	<update id="updateRoyaltyPay" parameterType="java.util.Map">
		UPDATE 
			royalty
		SET
			royalty_pay_actual_date = NOW(),
			royalty_actual_amount = #{royalty.royaltyActualAmount},
			royalty_head_staff_id = #{royalty.royaltyHeadStaffId}
		WHERE 
			royalty_code = #{royalty.royaltyCode}
		
	</update>



</mapper>